declare module com {
	export module telerik {
		export module android {
			export module common {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class CollectionChangeAction {
					public static class: java.lang.Class<com.telerik.android.common.CollectionChangeAction>;
					public static ADD: com.telerik.android.common.CollectionChangeAction;
					public static REMOVE: com.telerik.android.common.CollectionChangeAction;
					public static RESET: com.telerik.android.common.CollectionChangeAction;
					public static REPLACE: com.telerik.android.common.CollectionChangeAction;
					public static MOVE: com.telerik.android.common.CollectionChangeAction;
					public static valueOf(param0: string): com.telerik.android.common.CollectionChangeAction;
					public static values(): native.Array<com.telerik.android.common.CollectionChangeAction>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class CollectionChangeListener<E>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.CollectionChangeListener<any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.CollectionChangeListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						collectionChanged(param0: com.telerik.android.common.CollectionChangedEvent<E>): void;
					});
					public constructor();
					public collectionChanged(param0: com.telerik.android.common.CollectionChangedEvent<E>): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class CollectionChangedEvent<E>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.CollectionChangedEvent<any>>;
					public constructor(param0: com.telerik.android.common.ObservableCollection<any>, param1: com.telerik.android.common.CollectionChangeAction, param2: java.util.List<any>, param3: java.util.List<any>, param4: number, param5: number);
					public getNewIndex(): number;
					public getSource(): com.telerik.android.common.ObservableCollection<any>;
					public getNewItems(): java.util.List<any>;
					public getOldIndex(): number;
					public constructor(param0: com.telerik.android.common.ObservableCollection<E>, param1: com.telerik.android.common.CollectionChangeAction);
					public action(): com.telerik.android.common.CollectionChangeAction;
					public getOldItems(): java.util.List<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class DataTuple<T, U, V>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.DataTuple<any,any,any>>;
					public firstValue: T;
					public secondValue: U;
					public thirdValue: V;
					public constructor(param0: T, param1: U, param2: V);
					public toString(): string;
					public constructor(param0: T, param1: U);
					public constructor(param0: T);
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class DateTimeExtensions extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.DateTimeExtensions>;
					public static subtract(param0: java.util.Calendar, param1: java.util.Calendar): com.telerik.android.common.TimeSpan;
					public static getHourOfYear(param0: java.util.Calendar): number;
					public static getQuarterOfYear(param0: java.util.Calendar): number;
					public constructor();
					public static getMinuteOfYear(param0: java.util.Calendar): number;
					public static getSecondOfYear(param0: java.util.Calendar): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class DependencyPropertyChangedListener extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.DependencyPropertyChangedListener>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.DependencyPropertyChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPropertyChanged(param0: any, param1: number, param2: any): void;
					});
					public constructor();
					public onPropertyChanged(param0: any, param1: number, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Function<TArg, TResult>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Function<any,any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.Function<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: TArg): TResult;
					});
					public constructor();
					public apply(param0: TArg): TResult;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Function2<TArg1, TArg2, TResult>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Function2<any,any,any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.Function2<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: TArg1, param1: TArg2): TResult;
					});
					public constructor();
					public apply(param0: TArg1, param1: TArg2): TResult;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Function2Async<TArg1, TArg2, TResult>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Function2Async<any,any,any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.Function2Async<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: TArg1, param1: TArg2, param2: com.telerik.android.common.Procedure<TResult>): void;
					});
					public constructor();
					public apply(param0: TArg1, param1: TArg2, param2: com.telerik.android.common.Procedure<TResult>): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class ObservableCollection<E>  extends java.util.ArrayList<any> {
					public static class: java.lang.Class<com.telerik.android.common.ObservableCollection<any>>;
					public addCollectionChangeListener(param0: com.telerik.android.common.CollectionChangeListener<any>): void;
					public removeCollectionChangeListener(param0: com.telerik.android.common.CollectionChangeListener<any>): void;
					public addAll(param0: java.util.Collection<any>): boolean;
					public removeRange(param0: number, param1: number): void;
					public isEmpty(): boolean;
					public add(param0: any): boolean;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public remove(param0: number): any;
					public notifyListeners(param0: com.telerik.android.common.CollectionChangedEvent<any>): void;
					public iterator(): java.util.Iterator<any>;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public constructor();
					public toArray(): native.Array<any>;
					public clear(): void;
					public get(param0: number): any;
					public subList(param0: number, param1: number): java.util.List<any>;
					public beginUpdate(): void;
					public listIterator(param0: number): java.util.ListIterator<any>;
					public endUpdate(): void;
					public hashCode(): number;
					public constructor(param0: number);
					public contains(param0: any): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public add(param0: number, param1: any): void;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public equals(param0: any): boolean;
					public set(param0: number, param1: any): any;
					public constructor(param0: java.util.Collection<any>);
					public listIterator(): java.util.ListIterator<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Orientation {
					public static class: java.lang.Class<com.telerik.android.common.Orientation>;
					public static HORIZONTAL: com.telerik.android.common.Orientation;
					public static VERTICAL: com.telerik.android.common.Orientation;
					public static valueOf(param0: string): com.telerik.android.common.Orientation;
					public static values(): native.Array<com.telerik.android.common.Orientation>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Procedure<TArg>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Procedure<any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.Procedure<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: TArg): void;
					});
					public constructor();
					public apply(param0: TArg): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Procedure2<TArg1, TArg2>  extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Procedure2<any,any>>;
					/**
					 * Constructs a new instance of the com.telerik.android.common.Procedure2<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						apply(param0: TArg1, param1: TArg2): void;
					});
					public constructor();
					public apply(param0: TArg1, param1: TArg2): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export abstract class PropertyManager extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.PropertyManager>;
					public static LOCAL_VALUE: number;
					public static PALETTE_VALUE: number;
					public static DEFAULT_VALUE: number;
					public static UNSET_VALUE: any;
					public getValue(param0: number): any;
					public resetPropertyValue(param0: number): void;
					public constructor();
					public static registerProperty(param0: any, param1: com.telerik.android.common.DependencyPropertyChangedListener): number;
					public setValue(param0: number, param1: number, param2: any): void;
					public setValue(param0: number, param1: any): void;
				}
				export module PropertyManager {
					export class PropertyBag extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.PropertyManager.PropertyBag>;
						public setValueForKey(param0: number, param1: any): void;
						public constructor(param0: any);
						public resolveValue(): any;
					}
					export class PropertyMetadata extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.PropertyManager.PropertyMetadata>;
						public propertyBags: java.util.HashMap<java.lang.Integer,com.telerik.android.common.PropertyManager.PropertyBag>;
						public defaultValue(): any;
						public constructor(param0: any, param1: com.telerik.android.common.DependencyPropertyChangedListener);
						public getListener(): com.telerik.android.common.DependencyPropertyChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class RadThickness extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.RadThickness>;
					public left: number;
					public top: number;
					public right: number;
					public bottom: number;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public equals(param0: any): boolean;
					public clone(): any;
					public constructor();
					public clone(): com.telerik.android.common.RadThickness;
					public static getEmpty(): com.telerik.android.common.RadThickness;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class TestAPI extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.TestAPI>;
					public showToast(param0: globalAndroid.content.Context): void;
					public constructor();
					public showToast3(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class TimeSpan extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.TimeSpan>;
					public static fromDays(param0: number): com.telerik.android.common.TimeSpan;
					public static fromMinutes(param0: number): com.telerik.android.common.TimeSpan;
					public static fromHours(param0: number): com.telerik.android.common.TimeSpan;
					public constructor(param0: java.util.Calendar, param1: java.util.Calendar);
					public constructor();
					public getMillis(): number;
					public static fromMilliseconds(param0: number): com.telerik.android.common.TimeSpan;
					public static fromSeconds(param0: number): com.telerik.android.common.TimeSpan;
					public getTotalDays(): number;
					public static getZero(): com.telerik.android.common.TimeSpan;
					public compareTo(param0: any): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export class Util extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.android.common.Util>;
					public static getLayoutPart(param0: globalAndroid.app.Activity, param1: number, param2: java.lang.Class<any>): any;
					public static createViewFromXML(param0: number, param1: java.lang.Class<any>, param2: globalAndroid.content.Context): any;
					public static generateDummyText(param0: string): string;
					public static getLayoutPart(param0: globalAndroid.view.View, param1: number, param2: java.lang.Class<any>): any;
					public static getSP(param0: number): number;
					public static isNullOrEmpty(param0: string): boolean;
					public static Equals(param0: any, param1: any): boolean;
					public static convertToRectF(param0: com.telerik.android.common.math.RadRect): globalAndroid.graphics.RectF;
					public static getLayoutPart(param0: globalAndroid.view.View, param1: number, param2: java.lang.Class<any>, param3: boolean): any;
					public toString(): string;
					public static getLayoutPart(param0: globalAndroid.app.Activity, param1: number, param2: java.lang.Class<any>, param3: boolean): any;
					public static getDimen(param0: number, param1: number): number;
					public constructor();
					public static generateViewId(): number;
					public static RectFToRect(param0: globalAndroid.graphics.RectF): globalAndroid.graphics.Rect;
					public static toString(param0: any): string;
					public static getDP(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module animations {
					export class AnimationEasingHelper extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.animations.AnimationEasingHelper>;
						public constructor();
						public static circularEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static sinusoidalEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static cubicEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static quadraticEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static quarticEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static quadraticEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static exponentialEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static exponentialEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static quadraticEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static quarticEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static quarticEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static cubicEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static sinusoidalEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static cubicEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static quinticEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static quinticEaseOut(param0: number, param1: number, param2: number, param3: number): number;
						public static exponentialEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static circularEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static quinticEaseInOut(param0: number, param1: number, param2: number, param3: number): number;
						public static linear(param0: number, param1: number, param2: number, param3: number): number;
						public static sinusoidalEaseIn(param0: number, param1: number, param2: number, param3: number): number;
						public static circularEaseIn(param0: number, param1: number, param2: number, param3: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module animations {
					export class EasingType {
						public static class: java.lang.Class<com.telerik.android.common.animations.EasingType>;
						public static Linear: com.telerik.android.common.animations.EasingType;
						public static QuadraticIn: com.telerik.android.common.animations.EasingType;
						public static QuadraticOut: com.telerik.android.common.animations.EasingType;
						public static QuadraticInOut: com.telerik.android.common.animations.EasingType;
						public static CubicIn: com.telerik.android.common.animations.EasingType;
						public static CubicOut: com.telerik.android.common.animations.EasingType;
						public static CubicInOut: com.telerik.android.common.animations.EasingType;
						public static QuarticIn: com.telerik.android.common.animations.EasingType;
						public static QuarticOut: com.telerik.android.common.animations.EasingType;
						public static QuarticInOut: com.telerik.android.common.animations.EasingType;
						public static QuinticIn: com.telerik.android.common.animations.EasingType;
						public static QuinticOut: com.telerik.android.common.animations.EasingType;
						public static QuinticInOut: com.telerik.android.common.animations.EasingType;
						public static SinusoidalIn: com.telerik.android.common.animations.EasingType;
						public static SinusoidalOut: com.telerik.android.common.animations.EasingType;
						public static SinusoidalInOut: com.telerik.android.common.animations.EasingType;
						public static ExponentialIn: com.telerik.android.common.animations.EasingType;
						public static ExponentialOut: com.telerik.android.common.animations.EasingType;
						public static ExponentialInOut: com.telerik.android.common.animations.EasingType;
						public static CircularIn: com.telerik.android.common.animations.EasingType;
						public static CircularOut: com.telerik.android.common.animations.EasingType;
						public static CircularInOut: com.telerik.android.common.animations.EasingType;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static valueOf(param0: string): com.telerik.android.common.animations.EasingType;
						public static values(): native.Array<com.telerik.android.common.animations.EasingType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module exceptions {
					export class MissingLayoutPartException extends java.lang.Error {
						public static class: java.lang.Class<com.telerik.android.common.exceptions.MissingLayoutPartException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module exceptions {
					export class WrongLayoutPartTypeException extends java.lang.Error {
						public static class: java.lang.Class<com.telerik.android.common.exceptions.WrongLayoutPartTypeException>;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadCircle extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadCircle>;
						public centerX: number;
						public centerY: number;
						public radius: number;
						public constructor();
						public constructor(param0: com.telerik.android.common.math.RadPoint, param1: number);
						public center(): com.telerik.android.common.math.RadPoint;
						public getBounds(): com.telerik.android.common.math.RadRect;
						public constructor(param0: number, param1: number, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadLine extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadLine>;
						public x1: number;
						public x2: number;
						public y1: number;
						public y2: number;
						public constructor(param0: com.telerik.android.common.math.RadPoint, param1: com.telerik.android.common.math.RadPoint);
						public static round(param0: com.telerik.android.common.math.RadLine): com.telerik.android.common.math.RadLine;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadMath extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadMath>;
						public static DEG_TO_RAD_FACTOR: number;
						public static RAD_TO_DEG_FACTOR: number;
						public static EPSILON: number;
						public static areClose(param0: number, param1: number): boolean;
						public static getPolarCoordinates(param0: com.telerik.android.common.math.RadPoint, param1: com.telerik.android.common.math.RadPoint): com.telerik.android.common.math.RadPolarCoordinates;
						public static areClose(param0: number, param1: number, param2: number): boolean;
						public static isOne(param0: number): boolean;
						public static getRotatedSize(param0: com.telerik.android.common.math.RadSize, param1: number): com.telerik.android.common.math.RadSize;
						public static getPointDistance(param0: number, param1: number, param2: number, param3: number): number;
						public static isZero(param0: number): boolean;
						public static getArcPoint(param0: number, param1: com.telerik.android.common.math.RadPoint, param2: number): com.telerik.android.common.math.RadPoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadPoint extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadPoint>;
						public static getInfinityPoint(): com.telerik.android.common.math.RadPoint;
						public constructor();
						public static round(param0: com.telerik.android.common.math.RadPoint): com.telerik.android.common.math.RadPoint;
						public getX(): number;
						public getY(): number;
						public equals(param0: any): boolean;
						public constructor(param0: number, param1: number);
						public toString(): string;
						public static getEmpty(): com.telerik.android.common.math.RadPoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadPolarCoordinates extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadPolarCoordinates>;
						public angle: number;
						public radius: number;
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadPolarVector extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadPolarVector>;
						public centerX: number;
						public centerY: number;
						public pointX: number;
						public pointY: number;
						public angle: number;
						public point(): com.telerik.android.common.math.RadPoint;
						public constructor();
						public center(): com.telerik.android.common.math.RadPoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadRect extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadRect>;
						public getLocation(): com.telerik.android.common.math.RadPoint;
						public constructor();
						public contains(param0: number, param1: number): boolean;
						public getX(): number;
						public constructor(param0: com.telerik.android.common.math.RadPoint, param1: com.telerik.android.common.math.RadPoint);
						public getCenter(): com.telerik.android.common.math.RadPoint;
						public equals(param0: any): boolean;
						public getRight(): number;
						public static getEmpty(): com.telerik.android.common.math.RadRect;
						public static centerRect(param0: com.telerik.android.common.math.RadRect, param1: com.telerik.android.common.math.RadRect): com.telerik.android.common.math.RadRect;
						public getHeight(): number;
						public toString(): string;
						public constructor(param0: number, param1: number, param2: number, param3: number);
						public getBottom(): number;
						public intersectsWith(param0: com.telerik.android.common.math.RadRect): boolean;
						public getWidth(): number;
						public static inflate(param0: com.telerik.android.common.math.RadRect, param1: com.telerik.android.common.RadThickness): com.telerik.android.common.math.RadRect;
						public static round(param0: com.telerik.android.common.math.RadRect): com.telerik.android.common.math.RadRect;
						public contains(param0: com.telerik.android.common.math.RadRect): boolean;
						public getY(): number;
						public isSizeValid(): boolean;
						public constructor(param0: number, param1: number);
						public static toSquare(param0: com.telerik.android.common.math.RadRect, param1: boolean): com.telerik.android.common.math.RadRect;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module android {
			export module common {
				export module math {
					export class RadSize extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.android.common.math.RadSize>;
						public constructor();
						public halfWidth(): number;
						public halfHeight(): number;
						public getWidth(): number;
						public static getEmpty(): com.telerik.android.common.math.RadSize;
						public equals(param0: any): boolean;
						public getHeight(): number;
						public static getInfinitySize(): com.telerik.android.common.math.RadSize;
						public constructor(param0: number, param1: number);
						public static getInvalid(): com.telerik.android.common.math.RadSize;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module primitives {
				export module panels {
					export class RadScrollView extends globalAndroid.widget.FrameLayout {
						public static class: java.lang.Class<com.telerik.widget.primitives.panels.RadScrollView>;
						public static SCROLLING_MODE_NONE: number;
						public static SCROLLING_MODE_VERTICAL: number;
						public static SCROLLING_MODE_HORIZONTAL: number;
						public static SCROLLING_MODE_BOTH: number;
						public isLayoutRequested(): boolean;
						public setSmoothScrollingEnabled(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public fullScroll(param0: number): boolean;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public shouldDelayChildPressedState(): boolean;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public computeHorizontalScrollOffset(): number;
						public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public fling(param0: number, param1: number): void;
						public computeScrollDeltaToGetChildRectOnScreen(param0: globalAndroid.graphics.Rect): globalAndroid.graphics.Point;
						public onMeasure(param0: number, param1: number): void;
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public computeVerticalScrollOffset(): number;
						public measureChild(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public getMaxHorizontalScrollAmount(): number;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public arrowScroll(param0: number): boolean;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public smoothScrollTo(param0: number, param1: number): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public smoothScrollBy(param0: number, param1: number): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public onOverScrolled(param0: number, param1: number, param2: boolean, param3: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public getMaxVerticalScrollAmount(): number;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public isFillViewport(): boolean;
						public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public onGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public scrollTo(param0: number, param1: number): void;
						public computeVerticalScrollRange(): number;
						public onAttachedToWindow(): void;
						public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
						public getTopFadingEdgeStrength(): number;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public computeScroll(): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public getLeftFadingEdgeStrength(): number;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getScrollMode(): number;
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public setFillViewport(param0: boolean): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public performAccessibilityAction(param0: number, param1: globalAndroid.os.Bundle): boolean;
						public onRequestFocusInDescendants(param0: number, param1: globalAndroid.graphics.Rect): boolean;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public getRightFadingEdgeStrength(): number;
						public getBottomFadingEdgeStrength(): number;
						public setScrollMode(param0: number): void;
						public onDetachedFromWindow(): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public isSmoothScrollingEnabled(): boolean;
						public setOverScrollMode(param0: number): void;
						public computeHorizontalScrollRange(): number;
						public measureChildWithMargins(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onSaveInstanceState(): globalAndroid.os.Parcelable;
						public pageScroll(param0: number): boolean;
						public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
						public getParent(): globalAndroid.view.ViewParent;
					}
					export module RadScrollView {
						export class SavedState extends globalAndroid.view.View.BaseSavedState {
							public static class: java.lang.Class<com.telerik.widget.primitives.panels.RadScrollView.SavedState>;
							public xScrollPosition: number;
							public yScrollPosition: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.telerik.widget.primitives.panels.RadScrollView.SavedState>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public constructor(param0: globalAndroid.os.Parcel);
							public constructor(param0: globalAndroid.os.Parcelable);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

//Generics information:
//com.telerik.android.common.CollectionChangeListener:1
//com.telerik.android.common.CollectionChangedEvent:1
//com.telerik.android.common.DataTuple:3
//com.telerik.android.common.Function:2
//com.telerik.android.common.Function2:3
//com.telerik.android.common.Function2Async:3
//com.telerik.android.common.ObservableCollection:1
//com.telerik.android.common.Procedure:1
//com.telerik.android.common.Procedure2:2