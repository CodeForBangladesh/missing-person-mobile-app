{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","viewProviders","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isLContainer","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","createTNode","createViewNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","tParent","injectorIndex","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","isClassBased_6","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noopFactory","RendererStyleFlags2","R3_ELEMENT_REF_FACTORY$1","R3_TEMPLATE_REF_FACTORY$1","R3_CHANGE_DETECTOR_REF_FACTORY$1","R3_VIEW_CONTAINER_REF_FACTORY$1","R3_RENDERER2_FACTORY$1","ElementRef","nativeElement","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵPublicFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵEC","elementContainerStart","ɵeC","elementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18nAttribute","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","compileNgModule","expandModuleWithProviders","emitInline","compileInjector","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","typeArgumentCount","EMPTY_OBJ$1","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","USE_VALUE$1","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","preserveWhitespaces","viewQueries","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","facade","R3_COMPILE_PIPE","compilePipe","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","noop","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","VERSION","full","major","minor","patch","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","ɵangular_packages_core_core_l","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_k","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_m","ɵangular_packages_core_core_o","ɵangular_packages_core_core_n","ɵangular_packages_core_core_r","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_z","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_be","ɵangular_packages_core_core_s","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$1","ɵi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","ɵi18nInterpolation1","i18nInterpolation1","ɵi18nInterpolation2","i18nInterpolation2","ɵi18nInterpolation3","i18nInterpolation3","idx","ɵi18nInterpolation4","i18nInterpolation4","b1","ɵi18nInterpolation5","i18nInterpolation5","ɵi18nInterpolation6","i18nInterpolation6","ɵi18nInterpolation7","i18nInterpolation7","b2","ɵi18nInterpolation8","i18nInterpolation8","ɵi18nInterpolationV","i18nInterpolationV","ɵi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ɵWRAP_RENDERER_FACTORY2","ɵRender3DebugRendererFactory2","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompileComponent","ɵcompileDirective","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$2","getRootView$1","componentOrView","ɵgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ɵcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ɵR3_COMPILE_COMPONENT__POST_NGCC__","ɵR3_COMPILE_DIRECTIVE__POST_NGCC__","ɵR3_COMPILE_INJECTABLE__POST_NGCC__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵR3_COMPILE_NGMODULE__POST_NGCC__","setScopeOnDeclaredComponents","declaration","ɵR3_COMPILE_PIPE__POST_NGCC__","ɵivyEnable__POST_NGCC__","ɵR3_ELEMENT_REF_FACTORY__POST_NGCC__","injectElementRef","ɵR3_TEMPLATE_REF_FACTORY__POST_NGCC__","injectTemplateRef","ɵR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","injectChangeDetectorRef","ɵR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","adjustedIdx","_adjustIndex","shift","ɵR3_RENDERER2_FACTORY__POST_NGCC__","injectRenderer2","getOrCreateRenderer2","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Injector\"] = 2] = \"Injector\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var renderParent = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 2 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 3 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classesValue === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 2 /* Class */ : 3 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 15 /* BitMask */) | (staticIndex << 4 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 4 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 4 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 4 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            tNode = tView.data[adjustedIndex] = createTNode(type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(2 /* View */, index, null, null, null);\n        }\n        isParent = true;\n        return previousOrParentTNode = view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(previousOrParentTNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, viewData), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), renderer, viewData);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index, viewData), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, viewData);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n        if (directiveDef.template) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, native) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                rootView.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, hostRNode);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n    var R3_RENDERER2_FACTORY = injectRenderer2;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noopFactory() {\n        var tokens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tokens[_i] = arguments[_i];\n        }\n    }\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n    var R3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY;\n    var R3_ELEMENT_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_TEMPLATE_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_RENDERER2_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_ELEMENT_REF_FACTORY$1 = R3_ELEMENT_REF_FACTORY__PRE_NGCC__;\n    var R3_TEMPLATE_REF_FACTORY$1 = R3_TEMPLATE_REF_FACTORY__PRE_NGCC__;\n    var R3_CHANGE_DETECTOR_REF_FACTORY$1 = R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__;\n    var R3_VIEW_CONTAINER_REF_FACTORY$1 = R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__;\n    var R3_RENDERER2_FACTORY$1 = R3_RENDERER2_FACTORY__PRE_NGCC__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY$1(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return R3_RENDERER2_FACTORY$1(); };\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY$1(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵPublicFeature': PublicFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵEC': elementContainerStart,\n        'ɵeC': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18nAttribute': i18nAttribute,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.0.4');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY$1(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY$1(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled$1 ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$2(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$2(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_k = _localeFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_m = wtfEnabled;\n    exports.ɵangular_packages_core_core_o = createScope;\n    exports.ɵangular_packages_core_core_n = detectWTF;\n    exports.ɵangular_packages_core_core_r = endTimeRange;\n    exports.ɵangular_packages_core_core_p = leave;\n    exports.ɵangular_packages_core_core_q = startTimeRange;\n    exports.ɵangular_packages_core_core_bd = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_w = _getViewData;\n    exports.ɵangular_packages_core_core_x = bindingUpdated;\n    exports.ɵangular_packages_core_core_v = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_z = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bg = loadInternal;\n    exports.ɵangular_packages_core_core_ba = createElementRef;\n    exports.ɵangular_packages_core_core_bb = createTemplateRef;\n    exports.ɵangular_packages_core_core_bc = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_be = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_s = _def;\n    exports.ɵangular_packages_core_core_t = DebugRendererFactory2;\n    exports.ɵangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled$1;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵPublicFeature = PublicFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18nAttribute = i18nAttribute;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nExpMapping = i18nExpMapping;\n    exports.ɵi18nInterpolation1 = i18nInterpolation1;\n    exports.ɵi18nInterpolation2 = i18nInterpolation2;\n    exports.ɵi18nInterpolation3 = i18nInterpolation3;\n    exports.ɵi18nInterpolation4 = i18nInterpolation4;\n    exports.ɵi18nInterpolation5 = i18nInterpolation5;\n    exports.ɵi18nInterpolation6 = i18nInterpolation6;\n    exports.ɵi18nInterpolation7 = i18nInterpolation7;\n    exports.ɵi18nInterpolation8 = i18nInterpolation8;\n    exports.ɵi18nInterpolationV = i18nInterpolationV;\n    exports.ɵi18nMapping = i18nMapping;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ɵpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ɵcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ɵcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ɵcompilePipe = R3_COMPILE_PIPE;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ɵR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ɵR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ɵR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ɵR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ɵR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ɵivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ɵR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ɵR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ɵR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ɵR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ɵR3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY__POST_NGCC__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}